#!/bin/sh

# Git Push 안전성 검증 파이프라인
# 1. 브랜치 패턴 검사
BRANCH_NAME=$(git symbolic-ref --short HEAD)
echo "$BRANCH_NAME" | grep -Eq '^(main|release|dev|hotfix|docs|feat/[a-z0-9._/-]+|fix/[a-z0-9._/-]+|refactor/[a-z0-9._/-]+|test/[a-z0-9._/-]+|chore/[a-z0-9._/-]+)$' \
  || { echo "🚫 브랜치 이름 잘못 작성함!!"; exit 1; }

# 2. 시크릿 키 검증
if ! command -v gitleaks >/dev/null 2>&1; then
  echo "⚠️ gitleaks가 설치되어 있지 않아 시크릿 스캔을 건너뜁니다."
  echo "   설치 방법: macOS → brew install gitleaks / Windows → choco install gitleaks"
  exit 1
else
  echo "pre-push / 시크릿 키 검증..."
  gitleaks detect --no-git --source . --redact --no-banner
fi

echo "pre-push / 환경 변수 유효성 검증...";   yarn env:check:light || exit 1     # 3. 환경 변수 유효성 검증
echo "pre-push / 엄격한 Lint 규칙 검증...";  yarn lint:strict     || exit 1     # 4. 코드 스타일 규칙 검증
echo "pre-push / 타입 안전성 검증...";       yarn typecheck       || exit 1     # 5. 타입 안전성 검증

# 6. 단위 테스트(Jest + RTL)
echo "pre-push / 코드 수행(없으면 자동 통과)..."
if git rev-parse --abbrev-ref @{upstream} >/dev/null 2>&1; then
  yarn test:related || exit 1
else
  yarn jest --bail --maxWorkers=50% --onlyChanged --passWithNoTests || exit 1
fi