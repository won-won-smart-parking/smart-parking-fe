#!/bin/sh

# Git Push 안전성 검증 파이프라인
# 1. 시크릿 키 검증
if command -v gitleaks >/dev/null 2>&1; then
  echo "▶ push 전 gitleaks로 시크릿 스캔을 실행합니다..."
  gitleaks detect --no-git --source . --redact --no-banner
else
  echo "⚠️ gitleaks가 설치되어 있지 않아 시크릿 스캔을 건너뜁니다."
  echo "   설치 방법: macOS → brew install gitleaks / Windows → choco install gitleaks"
fi

# 2. 브랜치 패턴 검사
BRANCH_NAME=$(git symbolic-ref --short HEAD)
if ! echo "$BRANCH_NAME" | grep -Eq '^(main|release|dev|hotfix|feat\/[a-z0-9._-]+|fix\/[a-z0-9._-]+|refactor\/[a-z0-9._-]+|test\/[a-z0-9._-]+|docs\/[a-z0-9._-]+|chore\/[a-z0-9._-]+)$'; then
  echo "🚫 브랜치 이름 잘못 작성함!!"
  echo "이 중에 하나만 허용: main, release, dev, hotfix, <type>/<desc>"
  exit 1
fi

# 3. 환경 변수 유효성 검증
echo "Push 전 환경 변수 유효성 검증..."
yarn env:check || exit 1

# 4. 타입 안전성 검증
echo "Push 전 타입 안전성 검증..."
yarn typecheck || exit 1

# 5. 단위 테스트(Jest + RTL)
echo "Push 전 구현한 기능관 관련된 테스트 코드 수행(없으면 자동 통과)..."
yarn test:related

# 6. 코드 스타일 규칙 검증
echo "Push 전 엄격한 Lint 규칙 검증..."
yarn lint:strict || exit 1